import*as r from"./alphaTab.core.min.mjs";export*from"./alphaTab.core.min.mjs";r.Environment.isRunningInWorker?r.Environment.initializeWorker():r.Environment.isRunningInAudioWorklet?r.Environment.initializeAudioWorklet():r.Environment.initializeMain((e=>{if(r.Environment.webPlatform==r.WebPlatform.NodeJs)throw new r.AlphaTabError(r.AlphaTabErrorType.General,"Workers not yet supported in Node.js");if(r.Environment.webPlatform==r.WebPlatform.BrowserModule||r.Environment.isWebPackBundled)return r.Logger.debug("AlphaTab","Creating webworker"),new r.Environment.alphaTabWorker(new URL("./alphaTab.worker.min.mjs",import.meta.url),{type:"module"});if(!e.core.scriptFile)throw new r.AlphaTabError(r.AlphaTabErrorType.General,"Could not detect alphaTab script file, cannot initialize renderer");try{r.Logger.debug("AlphaTab","Creating Blob worker");const o=`importScripts('${e.core.scriptFile}')`,n=new Blob([o]);return new Worker(URL.createObjectURL(n))}catch(o){return r.Logger.warning("Rendering","Could not create inline worker, fallback to normal worker"),new Worker(e.core.scriptFile)}}),((e,o)=>{if(r.Environment.webPlatform==r.WebPlatform.NodeJs)throw new r.AlphaTabError(r.AlphaTabErrorType.General,"Audio Worklets not yet supported in Node.js");if(r.Environment.webPlatform==r.WebPlatform.BrowserModule||r.Environment.isWebPackBundled){r.Logger.debug("AlphaTab","Creating Module worklet");return e.audioWorklet.addModule(new URL("./alphaTab.worklet.min.mjs",import.meta.url))}return r.Logger.debug("AlphaTab","Creating Script worklet"),e.audioWorklet.addModule(o.core.scriptFile)}));
//# sourceMappingURL=alphaTab.min.mjs.map
